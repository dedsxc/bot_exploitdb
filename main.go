package main

import (
	"exploitdb/api"
	"exploitdb/data"
	"exploitdb/file"
	"fmt"
	"log"
	"time"
)

const (
	uriEndpointBase = "https://github.com/offensive-security/exploitdb/tree/master/"
	uriEndpointCsv  = "https://raw.githubusercontent.com/offensive-security/exploitdb/master/files_exploits.csv"
	configFile      = "./config.json"
	cacheFile       = "./cache.txt"
)

func IsUpdated(init, lenght int) bool {
	return init != lenght
}

func main() {
	var init int = 0
	// Create cache file
	file.CreateFile(cacheFile)
	// Connect to twitter
	twit := api.New(configFile)
	client := twit.Connect()
	// Get exploitdb.csv and tweet it
	for {
		res, length := data.GetCsv(uriEndpointCsv)
		if IsUpdated(init, length) {
			for i := 1; i < length; i++ {
				if !data.IfExist(&res[i][0], cacheFile) {
					msg := fmt.Sprintf("Desc: %s\nType: %s\nPlatform: %s\nLink: %s", res[i][2], res[i][5], res[i][6], uriEndpointBase+res[i][1])
					tweet := api.Tweet(client, msg)
					log.Printf("[+] Created at %s\n%s", tweet.CreatedAt, tweet.Text)
					data.AddId(&res[i][0], cacheFile)
				}
			}
			init = length
		}
		time.Sleep(60 * time.Minute)
	}
}
