package api

import (
	"encoding/json"
	"io/ioutil"
	"log"
	"time"

	"github.com/dghubble/go-twitter/twitter"
	"github.com/dghubble/oauth1"
)

type Credential struct {
	ConsumerToken  string `json:"consumerToken"`
	ConsumerSecret string `json:"consumerSecret"`
	AccessToken    string `json:"accessToken"`
	AccessSecret   string `json:"accessSecret"`
}

func New(file string) Credential {
	var cred Credential
	rawApi, err := ioutil.ReadFile(file)
	if err != nil {
		log.Fatal(err)
	}
	err = json.Unmarshal(rawApi, &cred)
	if err != nil {
		log.Fatal(err)
	}
	return cred
}

func (c *Credential) Connect() *twitter.Client {
	config := oauth1.NewConfig(c.ConsumerToken, c.ConsumerSecret)
	token := oauth1.NewToken(c.AccessToken, c.AccessSecret)
	httpClient := config.Client(oauth1.NoContext, token)
	client := twitter.NewClient(httpClient)
	return client
}

func Tweet(client *twitter.Client, msg string) *twitter.Tweet {
	tweet, _, err := client.Statuses.Update(msg, nil)
	if err != nil {
		log.Print(err)
		time.Sleep(24 * time.Hour)
	}
	return tweet
}
